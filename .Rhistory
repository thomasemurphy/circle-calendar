dice_roll_sums <- c()
for (counter_1 in 1 : n_dice - 1) {
for (counter_2 in counter_1 + 1 : n_dice) {
dice_roll_sums <- append(
dice_roll_sums,
dice_roll[counter_1] + dice_roll[counter_2]
)
}
}
unique_sums <- unique(dice_roll_sums)
# not sure where the NAs are coming from
unique_sums <- unique_sums[!is.na(unique_sums)]
hit <- sum(my_numbers %in% unique_sums) > 0
if (hit) {
hit_count <- hit_count + 1
}
}
hit_pct <- hit_count / n_sims
hit_pct
die <- 1:6
n_dice <- 4
my_numbers <- c(4, 5, 2)
n_sims <- 10000
hit_count <- 0
for (sim_count in 1: n_sims) {
dice_roll <- sample(
x = die,
size = n_dice,
replace = TRUE
)
dice_roll_sums <- c()
for (counter_1 in 1 : n_dice - 1) {
for (counter_2 in counter_1 + 1 : n_dice) {
dice_roll_sums <- append(
dice_roll_sums,
dice_roll[counter_1] + dice_roll[counter_2]
)
}
}
unique_sums <- unique(dice_roll_sums)
# not sure where the NAs are coming from
unique_sums <- unique_sums[!is.na(unique_sums)]
hit <- sum(my_numbers %in% unique_sums) > 0
if (hit) {
hit_count <- hit_count + 1
}
}
hit_pct <- hit_count / n_sims
hit_pct
die <- 1:6
n_dice <- 4
my_numbers <- c(6,7)
n_sims <- 10000
hit_count <- 0
for (sim_count in 1: n_sims) {
dice_roll <- sample(
x = die,
size = n_dice,
replace = TRUE
)
dice_roll_sums <- c()
for (counter_1 in 1 : n_dice - 1) {
for (counter_2 in counter_1 + 1 : n_dice) {
dice_roll_sums <- append(
dice_roll_sums,
dice_roll[counter_1] + dice_roll[counter_2]
)
}
}
unique_sums <- unique(dice_roll_sums)
# not sure where the NAs are coming from
unique_sums <- unique_sums[!is.na(unique_sums)]
hit <- sum(my_numbers %in% unique_sums) > 0
if (hit) {
hit_count <- hit_count + 1
}
}
hit_pct <- hit_count / n_sims
hit_pct
my_numbers <- c(4,9)
n_sims <- 10000
hit_count <- 0
for (sim_count in 1: n_sims) {
dice_roll <- sample(
x = die,
size = n_dice,
replace = TRUE
)
dice_roll_sums <- c()
for (counter_1 in 1 : n_dice - 1) {
for (counter_2 in counter_1 + 1 : n_dice) {
dice_roll_sums <- append(
dice_roll_sums,
dice_roll[counter_1] + dice_roll[counter_2]
)
}
}
unique_sums <- unique(dice_roll_sums)
# not sure where the NAs are coming from
unique_sums <- unique_sums[!is.na(unique_sums)]
hit <- sum(my_numbers %in% unique_sums) > 0
if (hit) {
hit_count <- hit_count + 1
}
}
hit_pct <- hit_count / n_sims
hit_pct
my_numbers <- c(6,7,11)
n_sims <- 10000
hit_count <- 0
for (sim_count in 1: n_sims) {
dice_roll <- sample(
x = die,
size = n_dice,
replace = TRUE
)
dice_roll_sums <- c()
for (counter_1 in 1 : n_dice - 1) {
for (counter_2 in counter_1 + 1 : n_dice) {
dice_roll_sums <- append(
dice_roll_sums,
dice_roll[counter_1] + dice_roll[counter_2]
)
}
}
unique_sums <- unique(dice_roll_sums)
# not sure where the NAs are coming from
unique_sums <- unique_sums[!is.na(unique_sums)]
hit <- sum(my_numbers %in% unique_sums) > 0
if (hit) {
hit_count <- hit_count + 1
}
}
hit_pct <- hit_count / n_sims
hit_pct
die <- 1:6
n_dice <- 4
my_numbers <- c(6,7,8)
n_sims <- 10000
hit_count <- 0
for (sim_count in 1: n_sims) {
dice_roll <- sample(
x = die,
size = n_dice,
replace = TRUE
)
dice_roll_sums <- c()
for (counter_1 in 1 : n_dice - 1) {
for (counter_2 in counter_1 + 1 : n_dice) {
dice_roll_sums <- append(
dice_roll_sums,
dice_roll[counter_1] + dice_roll[counter_2]
)
}
}
unique_sums <- unique(dice_roll_sums)
# not sure where the NAs are coming from
unique_sums <- unique_sums[!is.na(unique_sums)]
hit <- sum(my_numbers %in% unique_sums) > 0
if (hit) {
hit_count <- hit_count + 1
}
}
hit_pct <- hit_count / n_sims
hit_pct
source("~/circle-calendar/make_calendar.R")
library(tidyverse)
setwd('circle-calendar/')
library(tidyverse)
setwd('circle-calendar/')
my_year <- 2025
year_start <- as_date(
paste0(
my_year,
'-01-01'
)
)
year_end <- as_date(
paste0(
my_year + 1,
'-01-01'
)
)
this_year_dates <-
seq(
year_start,
year_end,
'1 day'
)
dates_df <- data.frame(
date = this_year_dates,
var2 = rnorm(n = length(this_year_dates), mean = 0.5, sd = 0.01)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %d'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = seq(
90,
-270,
-360 / length(this_year_dates)
),
size = 3
)
)
dates_df <- data.frame(
date = this_year_dates,
var2 = rnorm(n = length(this_year_dates), mean = 0.5, sd = 0.01)
) %>%
mutate(a = 1)
dates_df
n_days_in_year <- length(this_year_dates) - 1
interval(year_start, year_end)
interval(year_start, year_end) %/% days(1)
dates_df <- data.frame(
date = this_year_dates,
var2 = rnorm(n = length(this_year_dates), mean = 0.5, sd = 0.01)
) %>%
mutate(
pct_around = (interval(year_start, date) %/% days(1)) / n_days_in_year
)
dates_df
dates_df <- data.frame(
date = this_year_dates,
var2 = rnorm(n = length(this_year_dates), mean = 0.5, sd = 0.01)
) %>%
mutate(
pct_around = (interval(year_start, date) %/% days(1)) / n_days_in_year,
angle = ifelse(
pct_around <= 0.5,
90 - pct_around * 180/0.5,
90 - (pct_around - 0.5) * 180/0.5
)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %d'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = seq(
90,
-270,
-360 / length(this_year_dates)
),
size = 3
)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %d'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = dates_df$angle,
size = 3
)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %-d'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = dates_df$angle,
size = 3
)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %D'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = dates_df$angle,
size = 3
)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %d'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = dates_df$angle,
size = 3
)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %-d'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = dates_df$angle,
size = 3
)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %e'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = dates_df$angle,
size = 3
)
)
ceiling_date(seq(year_start, year_end, by = "1 month"), "month") - days(1)
ceiling_date(seq(year_start, year_end, by = "1 month"), "month") - days(1) - hours(12)
ceiling_date(seq(year_start, year_end, by = "1 month"), "month") - hours(12)
month_lines_df_1 <- data.frame(
x_line = ceiling_date(
seq(
year_start,
year_end,
by = "1 month"),
"month") - hours(12),
y_line = 0
)
month_lines_df_2 <- data.frame(
x_line = ceiling_date(
seq(
year_start,
year_end,
by = "1 month"),
"month") - hours(12),
y_line = 1
)
month_lines_df <- rbind(
month_lines_df_1,
month_lines_df_2
)
month_lines_df
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
geom_line(
data = month_lines_df,
mapping = aes(
x = x_line,
y = y_line,
group = x_line
)
) +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %e'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = dates_df$angle,
size = 3
)
)
ggplot(
data = dates_df,
mapping = aes(
x = date
)
) +
coord_polar() +
geom_line(
data = month_lines_df,
mapping = aes(
x = x_line,
y = y_line,
group = factor(x_line)
)
) +
scale_x_date(
name = '',
breaks = '1 day',
date_labels = '%b %e'
) +
theme_bw() +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(
angle = dates_df$angle,
size = 3
)
)
